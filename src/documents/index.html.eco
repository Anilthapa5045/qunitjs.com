---
title: "QUnit: A JavaScript Unit Testing framework."
layout: default
menuOrder: 10
---

  <div class="col2-1">
    <h2>What is QUnit?</h2>
    <p class="blurb">
      QUnit is a powerful, easy-to-use JavaScript unit test suite. It's used by the jQuery, jQuery UI and jQuery Mobile projects and is capable of testing any generic JavaScript code, <a href="https://github.com/jquery/qunit/tree/master/test">including itself</a>!
    </p>
    <h3>Get Involved</h3>
    <ul class="involved">
      <li>Check out the <a href="/api.html">API documentation</a> or the <a href="cookbook.html">Cookbook</a> to learn how to use QUnit</li>
      <li>To see more examples, check out the unit tests of <a href="https://github.com/jquery/jquery/tree/master/test/unit">jQuery</a>, <a href="https://github.com/jquery/jquery-ui/tree/master/tests/unit">jQuery UI</a> or the <a href="https://github.com/jzaefferer/jquery-validation/tree/master/test">jQuery Validation Plugin</a>.</li>
      <li>The code is located at: <a href="http://github.com/jquery/qunit">http://github.com/jquery/qunit</a>.</li>
      <li>Planning for QUnit and other testing tools also happens on the on the <a href="http://jquerytesting.pbworks.com/">jQuery Testing Team planning wiki</a>.</li>
      <li>Please post to the <a href="http://forum.jquery.com/qunit-and-testing">QUnit and testing forum</a> for anything related to QUnit or testing in general.</li>
      <li>For announcements, follow <a href="http://twitter.com/qunitjs">@qunitjs</a></li>
    </ul>
    <h3>History</h3>
    <p>
        QUnit was originally developed by John Resig as part of jQuery. In 2008 it got its own home, name and API documentation, allowing others to use it for their unit testing as well. At the time it still dependended on jQuery. A rewrite in 2009 fixed that, now QUnit runs completelty standalone.
    </p>
    <p>
      QUnit's assertion methods follow the <a href="http://wiki.commonjs.org/wiki/Unit_Testing/1.0">CommonJS Unit Testing</a> specification, which was to some degree influenced by QUnit. A notable exception is <code class="literal">throws</code> (a reserved JavaScript identifier), which is called <code class="literal">raises</code> in QUnit.
    </p>
  </div>

  <div class="col2-1">
    <h2>Getting Started</h2>

    A minimal QUnit test setup:

<code class="highlight" lang="html"><%=@partial('example-index.html')%></code>

    The contents of tests.js:

<code class="highlight" lang="javascript">
test( "hello test", function() {
  ok( 1 == "1", "Passed!" );
});
</code>

    <p>
      The result:
    </p>

    <p>
      <!-- todo: don't let Rick do stuff like this... ^RW -->
      <iframe src="/static/example-index.html" style="width:100%;height:300px;border:0px"></iframe>
    </p>
  </div>
